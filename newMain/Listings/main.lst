C51 COMPILER V9.60.0.0   MAIN                                                              04/19/2020 22:22:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <c8051f020.h>
   2          #include "std_macros.h"
   3          #include "DIO.h"
   4          #include "Keypad.h"
   5          #include "SevenSegments.h"
   6          #include "stepper.h"
   7          #define NOTPRESSED 0xff
   8          #define true 1
   9          #define false 0
  10          
  11          void checkPresed(void);
  12          
  13          
  14          void elevUP(void);
  15          void elecvDOWN(void);
  16          void elevSTOP(void);
  17          unsigned char presed,step,buttonFlagPresed;
  18          char sevensegmentValue,elevator;
  19          char opencounter=0;
  20          char upvalue = 0;
  21          char downvalue = 0;
  22          char wait;
  23          char open = false;
  24          char close = false;
  25          char up = false;
  26          char down = false;
  27          char buttonPresed[8] = {1,1,1,1,1,1,1,1};
  28          char buttonPresedFlags[8] = {0,0,0,0,0,0,0,0};
  29          char keypadFlags[5] = {0,1,2,3,4};
  30          char keypadvalues[5] = {0};
  31          char arr[4] = {0,1,2,3}; // sevenSegments number
  32          
  33          sbit led = P0^0;
  34          volatile char count = 0;
  35          volatile char count2 = 0;
  36          /*
  37          void ext_int_0() interrupt 0
  38          { 
  39              count = 0;
  40          }
  41          */
  42          
  43          
  44          void timer1_isr() interrupt 3
  45          {
  46   1        TH1 = 0X4B;        //Load the timer value
  47   1          TL1 = 0XFD;
  48   1        wait++;
  49   1      }
  50          void timer0_isr() interrupt 1
  51          {
  52   1        TH0 = 0X4B;        //ReLoad the timer value
  53   1          TL0 = 0XFD;
  54   1          count++;        // Toggle the LED pin 
C51 COMPILER V9.60.0.0   MAIN                                                              04/19/2020 22:22:16 PAGE 2   

  55   1          count2++;
  56   1      }
  57          
  58          void main (void)
  59          {
  60   1        sevensegmentValue = 0;
  61   1          seven_seg_write(0,sevensegmentValue,0);
  62   1        
  63   1        WDTCN = 0xDE;
  64   1        WDTCN = 0xAD;
  65   1        keypad_vInit(1);
  66   1      
  67   1        seven_seg_init(0,0);
  68   1        seven_seg_init(0,1);
  69   1      
  70   1        
  71   1        P3MDOUT &= 0x00;
  72   1        P3 = 0xff;
  73   1        
  74   1          TMOD = 0x01;       //Timer0 mode 1 
  75   1          SET_BIT(TMOD,4);
  76   1          TH1 = 0X4B;        //Load the timer value
  77   1          TL1 = 0XFD;
  78   1          TH0 = 0X4B;        //Load the timer value
  79   1          TL0 = 0XFD;
  80   1          TR0 = 1;           //turn ON Timer zero
  81   1          TR1 = 1;
  82   1          ET0 = 1;           //Enable TImer0 Interrupt
  83   1          
  84   1          EA = 1; 
  85   1         
  86   1         DIO_setPin_OutPutMode(2,0,1);
  87   1         DIO_setPin_OutPutMode(2,1,1);
  88   1        
  89   1      
  90   1        while(1)
  91   1        {
  92   2      
  93   2          checkPresed();
  94   2          for(step=0;step<8;step++)
  95   2            {
  96   3              if (buttonPresedFlags[step] == 1) 
  97   3              {
  98   4                buttonFlagPresed = 1;
  99   4              }
 100   3            }
 101   2          while(buttonFlagPresed)
 102   2        {
 103   3          
 104   3            if(buttonPresedFlags[0]==1 )  
 105   3              {
 106   4                if (sevensegmentValue == 0)
 107   4                  {
 108   5                    if( down && buttonPresedFlags[0])
 109   5                      {
 110   6                        open = true;
 111   6                        buttonPresedFlags[0] = 0;
 112   6                        down = false ;
 113   6                      }
 114   5                    else
 115   5                      {
 116   6                        open=true;
C51 COMPILER V9.60.0.0   MAIN                                                              04/19/2020 22:22:16 PAGE 3   

 117   6                      }
 118   5                  }
 119   4                else
 120   4                  {
 121   5                    elevator = 0;
 122   5                  }
 123   4              }
 124   3            
 125   3            if(buttonPresedFlags[1]==1) 
 126   3              {
 127   4                if (sevensegmentValue == 3)
 128   4                  {
 129   5      
 130   5                    if (up && buttonPresedFlags[1])
 131   5                      { 
 132   6                        open=true;
 133   6                        buttonPresedFlags[1] = 0;
 134   6                        up = false;
 135   6                      }
 136   5                    else if (!up)
 137   5                      {
 138   6                        open=true;
 139   6                      }
 140   5                  }
 141   4                else
 142   4                  {
 143   5                    elevator = 3;
 144   5                  }
 145   4              }
 146   3              
 147   3            if(buttonPresedFlags[5]==1 || buttonPresedFlags[6]==1)  
 148   3              {
 149   4                if (sevensegmentValue == 2)
 150   4                  {
 151   5                    if( down && buttonPresedFlags[6])
 152   5                      {
 153   6                        
 154   6                        open = true;        
 155   6                        buttonPresedFlags[6] = 0;
 156   6                        down = false;
 157   6                        
 158   6                      }
 159   5                    else if (up && buttonPresedFlags[5])
 160   5                      { 
 161   6                        open = true;
 162   6                        buttonPresedFlags[5] = 0;
 163   6                        up = false;
 164   6                      }
 165   5                    else
 166   5                    {
 167   6                      open = true;
 168   6                    }
 169   5                    
 170   5                  }
 171   4                else
 172   4                  {
 173   5                    elevator = 2;
 174   5                  }
 175   4              }
 176   3          
 177   3          
 178   3            if(buttonPresedFlags[3]==1 || buttonPresedFlags[4]==1)  
C51 COMPILER V9.60.0.0   MAIN                                                              04/19/2020 22:22:16 PAGE 4   

 179   3              {
 180   4                if (sevensegmentValue == 1)
 181   4                  {
 182   5                    if( down && buttonPresedFlags[4])
 183   5                      {
 184   6                        open=true;
 185   6                        buttonPresedFlags[4] = 0;
 186   6                        down = false;
 187   6                        
 188   6                      }
 189   5                    else if (up && buttonPresedFlags[3])
 190   5                      { 
 191   6                        open=true;
 192   6                        buttonPresedFlags[3] = 0;
 193   6                        up = false;
 194   6                      }
 195   5                    else if ( !up && !down )
 196   5                      {
 197   6                        open=true;
 198   6                      }
 199   5                  }
 200   4                else
 201   4                  {
 202   5                    elevator = 1;
 203   5                  }
 204   4              }
 205   3              checkPresed();
 206   3            if(sevensegmentValue < elevator)
 207   3              {
 208   4                up = true;
 209   4                checkPresed();
 210   4              }
 211   3            else if(sevensegmentValue > elevator)
 212   3              {
 213   4                down = true;
 214   4                checkPresed();
 215   4              }
 216   3            else
 217   3            {
 218   4              up = false;
 219   4              down = false;
 220   4            }
 221   3      
 222   3          if(open)
 223   3            {   
 224   4              motor_rotate(2,1,0);
 225   4              open=false;
 226   4              ET1= 1;
 227   4            }
 228   3            if(close)
 229   3            {
 230   4              motor_rotate(2,1,1);
 231   4              close = false;
 232   4            }
 233   3            if(wait >= 40)
 234   3            {
 235   4              close = true;
 236   4              ET1= 0;
 237   4              wait = 0;
 238   4            }
 239   3          if(count >= 30 && up)
 240   3            {
C51 COMPILER V9.60.0.0   MAIN                                                              04/19/2020 22:22:16 PAGE 5   

 241   4              if(upvalue >= 3)
 242   4                {
 243   5                  sevensegmentValue++;
 244   5                  seven_seg_write(0,sevensegmentValue,0);
 245   5                  upvalue = 0;
 246   5                }
 247   4                upvalue++;
 248   4                motor_rotate(2,0,0);
 249   4                  count =0;   
 250   4            }
 251   3            
 252   3          if(count >= 30 && down)
 253   3            {
 254   4              if(downvalue >= 3)
 255   4                {
 256   5                  sevensegmentValue--;
 257   5                  seven_seg_write(0,sevensegmentValue,0);
 258   5                  downvalue = 0;
 259   5                }
 260   4                downvalue++;
 261   4                motor_rotate(2,0,1);
 262   4                count =0;
 263   4            }
 264   3          
 265   3          
 266   3      
 267   3            
 268   3        }
 269   2            
 270   2            
 271   2      }
 272   1        } 
 273          /*
 274          void elevUP(void)
 275          {
 276            if(count2 >= 30)
 277            {
 278              motor_rotate(2,0,0);
 279              count2 =0;
 280            }
 281          }
 282          void elecvDOWN(void)
 283          {
 284            if(count2 >= 30)
 285            {
 286              motor_rotate(2,0,1);
 287              count2 =0;
 288            }
 289          }
 290          */
 291          /*
 292          void open(void)
 293          {
 294            if(count2 >= 30)
 295            {
 296              motor_rotate(2,1,1);
 297              count2 =0;
 298            }
 299          } 
 300          void close(void)
 301          {
 302            count3 = 0;
C51 COMPILER V9.60.0.0   MAIN                                                              04/19/2020 22:22:16 PAGE 6   

 303            if (count3 <=50)
 304            {
 305              if(count2 >= 30)
 306              {
 307                motor_rotate(2,1,0);
 308                count2 =0;
 309              }
 310            }
 311          }
 312          */
 313          
 314            
 315          /*
 316          void elevUP(void)
 317          {
 318            SET_BIT(P2,0);
 319            CLR_BIT(P2,1);
 320          }
 321          void elecvDOWN(void)
 322          {
 323            CLR_BIT(P2,0);
 324            SET_BIT(P2,1);
 325          }
 326          void elevSTOP(void)
 327          {
 328            DIO_write(2,0,1);
 329            DIO_write(2,1,1);
 330          }
 331          void open(void)
 332          {
 333            SET_BIT(P2,4);
 334            CLR_BIT(P2,5);
 335          } 
 336          void close(void)
 337          {
 338            CLR_BIT(P2,4);
 339            SET_BIT(P2,5);
 340          } 
 341          void stop(void)
 342          {
 343          CLR_BIT(P2,5);
 344            CLR_BIT(P2,4);
 345          }
 346            
 347          */
 348          
 349          void checkPresed(void)
 350            {
 351   1          for(step=0;step<8;step++)
 352   1          {
 353   2            buttonPresed[step]=DIO_read(3,step);
 354   2            delay_ms(1);
 355   2          }
 356   1          for(step=0;step<8;step++)
 357   1          {
 358   2            if(0 == buttonPresed[step])
 359   2            {
 360   3              buttonPresedFlags[step] = 1;
 361   3            }
 362   2          }
 363   1        }
 364              
C51 COMPILER V9.60.0.0   MAIN                                                              04/19/2020 22:22:16 PAGE 7   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    754    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     45    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
