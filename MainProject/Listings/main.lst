C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2020 08:41:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <c8051f020.h>
   2          #include "std_macros.h"
   3          #include "DIO.h"
   4          #include "Keypad.h"
   5          #include "SevenSegments.h"
   6          #include "stepper.h"
   7          #define NOTPRESSED 0xff
   8          #define true 1
   9          #define false 0
  10          
  11          //void checkPresed(void);
  12          //void keypadPresed(void);
  13          
  14          unsigned char presed,step,buttonFlagPresed;
  15          char sevensegmentValue,elevator;
  16          char opencounter=0;
  17          char upvalue = 0;
  18          char downvalue = 0;
  19          
  20          char doorclose=true;
  21          char open = false;
  22          char close = false;
  23          char up = false;
  24          char down = false;
  25          char enter = false;
  26          char entering=0;
  27          char buttonPresed[8] = {1,1,1,1,1,1,1,1};
  28          char buttonPresedFlags[8] = {0,0,0,0,0,0,0,0};
  29          char keypadFlags[11] = {0,0,0,0,0,0,0,0,0,0,0};
  30          // char keypadvalues[5] = {0};
  31          char floors[4] = {0,0,0,0}; // sevenSegments number
  32          
  33          
  34          volatile char count = 0;
  35          //volatile char count2 = 0;
  36          volatile char wait = 0;
  37          
  38          void ext_int_0() interrupt 0
  39          { 
  40   1          wait = 0;
  41   1      }
  42          void timer1_isr() interrupt 3
  43          {
  44   1        TH1 = 0X4B;        //Load the timer value
  45   1          TL1 = 0XFD;
  46   1        wait++;
  47   1      }
  48          void timer0_isr() interrupt 1
  49          {
  50   1        TH0 = 0X4B;        //ReLoad the timer value
  51   1          TL0 = 0XFD;
  52   1          count++;        // Toggle the LED pin 
  53   1          //count2++;
  54   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2020 08:41:20 PAGE 2   

  55          void keypadPresed(void)
  56          { 
  57   1        presed = keypad_press(1);
  58   1        keypadFlags[presed]=1;
  59   1      
  60   1      }
  61          void checkPresed(void)
  62            {
  63   1          for(step=0;step<8;step++)
  64   1          {
  65   2            buttonPresed[step]=DIO_read(3,step);
  66   2            delay_ms(1);
  67   2          }
  68   1          for(step=0;step<8;step++)
  69   1          {
  70   2            if(0 == buttonPresed[step])
  71   2            {
  72   3              buttonPresedFlags[step] = 1;
  73   3            }
  74   2          }
  75   1        }
  76          void main (void)
  77          {
  78   1        
  79   1        
  80   1          WDTCN = 0xDE;
  81   1          WDTCN = 0xAD;
  82   1          keypad_vInit(1);
  83   1      
  84   1          seven_seg_init(0,0);
  85   1          seven_seg_init(0,1);
  86   1          sevensegmentValue = 0;
  87   1          seven_seg_write(0,sevensegmentValue,0);
  88   1          seven_seg_write(0,entering,1);
  89   1          
  90   1          P3MDOUT &= 0x00;
  91   1          P3 = 0x7f;
  92   1          DIO_setPin_OutPutMode(3,7,1);
  93   1        
  94   1          TMOD = 0x01;       //Timer0 mode 1 
  95   1          SET_BIT(TMOD,4);
  96   1          TH1 = 0X4B;        //Load the timer value
  97   1          TL1 = 0XFD;
  98   1          TH0 = 0X4B;        //Load the timer value
  99   1          TL0 = 0XFD;
 100   1          TR0 = 1;           //turn ON Timer zero
 101   1          TR1 = 1;
 102   1          ET0 = 1;           //Enable TImer0 Interrupt
 103   1          
 104   1          EA = 1; 
 105   1         
 106   1      
 107   1          SET_BIT(IE,0); 
 108   1          SET_BIT(TCON,0);
 109   1        
 110   1      
 111   1        while(1)
 112   1        {
 113   2      
 114   2          checkPresed();
 115   2          for(step=0;step<8;step++)
 116   2            {
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2020 08:41:20 PAGE 3   

 117   3              if (buttonPresedFlags[step] == 1 ) 
 118   3              {
 119   4                buttonFlagPresed = 1;
 120   4              }
 121   3            }
 122   2            
 123   2          while(buttonFlagPresed)
 124   2        {
 125   3          
 126   3            checkPresed();
 127   3            if(buttonPresedFlags[0]==1 || keypadFlags[0] == 1 ) 
 128   3              {
 129   4                if (sevensegmentValue == 0)
 130   4                  {
 131   5                        open=true;
 132   5                        buttonPresedFlags[0] = 0;
 133   5                        floors[0] = 0;
 134   5                      keypadFlags[0] = 0;
 135   5                  }
 136   4                else
 137   4                  {
 138   5                    //elevator = 0;
 139   5                    floors[0] = 1;
 140   5                  }
 141   4              }
 142   3            if(buttonPresedFlags[3]==1 || buttonPresedFlags[4]==1 || keypadFlags[1] == 1) 
 143   3              {
 144   4                if (sevensegmentValue == 1)
 145   4                  {
 146   5                    if (keypadFlags[1] == 1)
 147   5                      {
 148   6                        open=true;
 149   6                        keypadFlags[1] = 0;
 150   6                      }
 151   5                    else if(  down && buttonPresedFlags[4])
 152   5                      {
 153   6                        open=true;
 154   6                        buttonPresedFlags[4] = 0;                 
 155   6                      }
 156   5                    else if (up && buttonPresedFlags[3])
 157   5                      { 
 158   6                        open=true;
 159   6                        buttonPresedFlags[3] = 0;
 160   6                      }
 161   5                    else if(!up && !down)
 162   5                      {
 163   6                        open=true;
 164   6                        keypadFlags[1] = 0;
 165   6                        buttonPresedFlags[3] = 0;
 166   6                        buttonPresedFlags[4] = 0;
 167   6                      }
 168   5                    floors[1] = 0;  
 169   5                  }
 170   4                else
 171   4                  {
 172   5                    //elevator = 1;
 173   5                    floors[1] = 1;
 174   5                  }
 175   4              }
 176   3              if(buttonPresedFlags[5]==1 || buttonPresedFlags[6]==1 || keypadFlags[2] == 1) 
 177   3              {
 178   4                if (sevensegmentValue == 2)
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2020 08:41:20 PAGE 4   

 179   4                  {
 180   5                    if (keypadFlags[2] == 1 ) 
 181   5                      {
 182   6                        open = true;
 183   6                        keypadFlags[2] = 0;
 184   6                      }               
 185   5                    else if(  down && buttonPresedFlags[6])
 186   5                      {           
 187   6                        buttonPresedFlags[6] = 0;
 188   6                        open = true;              
 189   6                      }
 190   5                    else if (up && buttonPresedFlags[5])
 191   5                      { 
 192   6                        buttonPresedFlags[5] = 0;
 193   6                        open = true;
 194   6                      }
 195   5                    else if ( !up && !down )
 196   5                    {
 197   6                      keypadFlags[2] = 0;
 198   6                      buttonPresedFlags[6] = 0;
 199   6                      buttonPresedFlags[5] = 0;
 200   6                      open = true;
 201   6                    }
 202   5                  floors[2] = 0;  
 203   5                  }
 204   4                else
 205   4                  {
 206   5                  //  elevator = 2;
 207   5                    floors[2] = 1;
 208   5                  }
 209   4              }
 210   3              if(buttonPresedFlags[1]==1 || keypadFlags[3] == 1)  
 211   3              {
 212   4                if (sevensegmentValue == 3)
 213   4                  {
 214   5                      open=true;
 215   5                      buttonPresedFlags[1] = 0;
 216   5                      keypadFlags[3] = 0;
 217   5                      floors[3] = 0;
 218   5                  }
 219   4                else
 220   4                  {
 221   5                    //elevator = 3;
 222   5                    floors[3] = 1;
 223   5                  }
 224   4              }
 225   3              
 226   3        
 227   3            keypadPresed();
 228   3            if(open)
 229   3            {   
 230   4              motor_rotate(2,1,0);
 231   4              open=false;
 232   4              ET1= 1;
 233   4              doorclose = false;
 234   4              up = false;
 235   4              down = false;
 236   4              enter = true;
 237   4            }
 238   3            if(close)
 239   3            {
 240   4              motor_rotate(2,1,1);
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2020 08:41:20 PAGE 5   

 241   4              close = false;
 242   4              doorclose = true;
 243   4              enter = false;
 244   4            }
 245   3            if(wait >= 80)
 246   3            {
 247   4              close = true;
 248   4              ET1= 0;
 249   4              wait = 0;
 250   4            }
 251   3            if(enter)
 252   3            {
 253   4              if(keypadFlags[10]==1)
 254   4              {
 255   5                delay_ms(300);
 256   5                entering++;
 257   5                seven_seg_write(0,entering,1);
 258   5                keypadFlags[10]=0;
 259   5              }
 260   4              if(keypadFlags[11]==1 && entering !=0)
 261   4              {
 262   5                delay_ms(300);
 263   5                entering--;
 264   5                seven_seg_write(0,entering,1);
 265   5                keypadFlags[11]=0;
 266   5              }
 267   4              if(entering >4)
 268   4              {
 269   5                SET_BIT(P3,7);
 270   5                wait=0;
 271   5              }
 272   4              else
 273   4              {
 274   5                CLR_BIT(P3,7);
 275   5              }
 276   4                
 277   4            }
 278   3      
 279   3      
 280   3      
 281   3          for(step=0;step<=3;step++)
 282   3            {
 283   4              if(floors[step]==1)
 284   4              {
 285   5                elevator = step;
 286   5                break;
 287   5              }
 288   4              else
 289   4              {
 290   5                elevator=sevensegmentValue;
 291   5              }
 292   4            }
 293   3            if(doorclose)
 294   3            {
 295   4                if(sevensegmentValue < elevator)
 296   4                  {
 297   5                    up = true;
 298   5                  }
 299   4                else if(sevensegmentValue > elevator)
 300   4                  {
 301   5                    down = true;
 302   5                  }
C51 COMPILER V9.60.0.0   MAIN                                                              04/26/2020 08:41:20 PAGE 6   

 303   4                  /*
 304   4                else
 305   4                {
 306   4                  up = false;
 307   4                  down = false;
 308   4                }
 309   4                  */
 310   4            }
 311   3            
 312   3            
 313   3          if(up && count >= 20)
 314   3            {
 315   4              motor_rotate(2,0,0);
 316   4              if(upvalue >= 3)
 317   4                {
 318   5                  sevensegmentValue++;
 319   5                  seven_seg_write(0,sevensegmentValue,0);
 320   5                  upvalue = 0;
 321   5                }
 322   4                upvalue++;
 323   4                
 324   4                  count =0;   
 325   4            }
 326   3            
 327   3          if(down && count >= 20)
 328   3            {
 329   4              motor_rotate(2,0,1);
 330   4              if(downvalue >= 3)
 331   4                {
 332   5                  sevensegmentValue--;
 333   5                  seven_seg_write(0,sevensegmentValue,0);
 334   5                  downvalue = 0;
 335   5                }
 336   4                downvalue++;
 337   4                
 338   4                count =0;
 339   4            }
 340   3      
 341   3        }
 342   2          
 343   2      }
 344   1        } 
 345          
 346          
 347              


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1016    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
